package com.nuite.modules.sys.controller;

import java.util.Arrays;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.nuite.common.utils.PageUtils;
import com.nuite.common.utils.R;
import com.nuite.common.validator.ValidatorUtils;
import com.nuite.modules.sys.entity.SizeAllotTemplateDetailEntity;
import com.nuite.modules.sys.entity.SizeAllotTemplateEntity;
import com.nuite.modules.sys.service.SizeAllotTemplateService;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiParam;


/**
 * 补单配码模板
 * @author yy
 * @date 2019-10-28 16:42:42
 */
@RestController
@RequestMapping("sys/sizeAllotTemplate")
@Api(tags="SizeAllotTemplate接口")
public class SizeAllotTemplateController {
	private Logger logger = LoggerFactory.getLogger(getClass());
	
    @Autowired
    private SizeAllotTemplateService sizeAllotTemplateService;

    /**
     * 列表
     */
    @RequestMapping("/list")
    public R list(@RequestParam Map<String, Object> params){
        PageUtils page = sizeAllotTemplateService.queryPage(params);

        return R.ok().put("page", page);
    }


    /**
     * 信息
     */
    @RequestMapping("/info/{seq}")
    public R info(@PathVariable("seq") Integer seq){
        SizeAllotTemplateEntity sizeAllotTemplate = sizeAllotTemplateService.selectById(seq);

        return R.ok().put("sizeAllotTemplate", sizeAllotTemplate);
    }

    /**
     * 保存
     */
    @RequestMapping("/save")
    public R save(@RequestBody SizeAllotTemplateEntity sizeAllotTemplate){
        sizeAllotTemplateService.insert(sizeAllotTemplate);

        return R.ok();
    }

    /**
     * 修改
     */
    @RequestMapping("/update")
    public R update(@RequestBody SizeAllotTemplateEntity sizeAllotTemplate){
        ValidatorUtils.validateEntity(sizeAllotTemplate);
        sizeAllotTemplateService.updateAllColumnById(sizeAllotTemplate);//全部更新
        
        return R.ok();
    }

    /**
     * 删除
     */
    @RequestMapping("/delete")
    public R delete(@RequestBody Integer[] seqs){
        sizeAllotTemplateService.deleteBatchIds(Arrays.asList(seqs));

        return R.ok();
    }
    
    
    /**
     * 查询指定南北总数量的模板List
     */
    @RequestMapping("/getTemplates")
    public R getTemplates(@ApiParam("南北编码：1南 2北") @RequestParam(value="nbCode", required=false) Integer nbCode,
			@ApiParam("模板总双数") @RequestParam(value="perNum", required=false) Integer perNum,
			HttpServletRequest request){
        try {
			List<SizeAllotTemplateEntity> list = sizeAllotTemplateService.getTemplates(nbCode, perNum);
			//添加配码详情
			String[] allSizeArr = {"33","34","35","35.5","36","36.5","37","37.5","38","39","40"};
			for(SizeAllotTemplateEntity sizeAllotTemplateEntity : list) {
				List<SizeAllotTemplateDetailEntity> templateDetailList = sizeAllotTemplateService.getSizeAllotTemplateDetailList(sizeAllotTemplateEntity.getSeq());
				sizeAllotTemplateEntity.setTemplateDetailList(templateDetailList);
				
				Integer[] sizeAllotDetailArr = {0,0,0,0,0,0,0,0,0,0,0};
				for(SizeAllotTemplateDetailEntity sizeAllotTemplateDetailEntity : templateDetailList) {
					String size = sizeAllotTemplateDetailEntity.getSize();
					Integer per = sizeAllotTemplateDetailEntity.getPer();
					for(int i = 0; i < allSizeArr.length; i++) {
						if(allSizeArr[i].equals(size)) {
							sizeAllotDetailArr[i] = per;
							break;
						}
					}
				}
				
				sizeAllotTemplateEntity.setTemplateDetailArr(sizeAllotDetailArr);
			}
			
			return R.ok(list);
		} catch (Exception e) {
			e.printStackTrace();
			logger.error(e.getMessage(), e);
			return R.error("服务器异常");
		}
    }
    
    
    
    /**
     * 查询全部模板
     */
    @RequestMapping("/getAllTemplates")
    public R getAllTemplates(HttpServletRequest request){
        try {
			List<SizeAllotTemplateEntity> list = sizeAllotTemplateService.getAllTemplates();
			//添加配码详情
			String[] allSizeArr = {"33","34","35","35.5","36","36.5","37","37.5","38","39","40"};
			for(SizeAllotTemplateEntity sizeAllotTemplateEntity : list) {
				List<SizeAllotTemplateDetailEntity> templateDetailList = sizeAllotTemplateService.getSizeAllotTemplateDetailList(sizeAllotTemplateEntity.getSeq());
				sizeAllotTemplateEntity.setTemplateDetailList(templateDetailList);
				
				Integer[] sizeAllotDetailArr = {0,0,0,0,0,0,0,0,0,0,0};
				for(SizeAllotTemplateDetailEntity sizeAllotTemplateDetailEntity : templateDetailList) {
					String size = sizeAllotTemplateDetailEntity.getSize();
					Integer per = sizeAllotTemplateDetailEntity.getPer();
					for(int i = 0; i < allSizeArr.length; i++) {
						if(allSizeArr[i].equals(size)) {
							sizeAllotDetailArr[i] = per;
							break;
						}
					}
				}
				
				sizeAllotTemplateEntity.setTemplateDetailArr(sizeAllotDetailArr);
			}
			
			return R.ok(list);
		} catch (Exception e) {
			e.printStackTrace();
			logger.error(e.getMessage(), e);
			return R.error("服务器异常");
		}
    }
    
    

}
