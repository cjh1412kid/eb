package com.nuite.modules.sys.service.impl;

import java.util.Date;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;

import com.alibaba.fastjson.JSONArray;
import com.baomidou.mybatisplus.mapper.EntityWrapper;
import com.baomidou.mybatisplus.mapper.Wrapper;
import com.baomidou.mybatisplus.plugins.Page;
import com.baomidou.mybatisplus.service.impl.ServiceImpl;
import com.nuite.common.utils.PageUtils;
import com.nuite.common.utils.Query;
import com.nuite.modules.sys.dao.AreaDao;
import com.nuite.modules.sys.dao.PatchDao;
import com.nuite.modules.sys.entity.AreaEntity;
import com.nuite.modules.sys.entity.PatchEntity;
import com.nuite.modules.sys.service.PatchService;


@Service
public class PatchServiceImpl extends ServiceImpl<PatchDao, PatchEntity> implements PatchService {

    @Autowired
    private AreaDao areaDao;
    
    @Autowired
    private PatchDao patchDao;
    
    
    
    
    @Override
    public PageUtils queryPage(Map<String, Object> params) {
        Page<PatchEntity> page = this.selectPage(
                new Query<PatchEntity>(params).getPage(),
                new EntityWrapper<PatchEntity>()
        );

        return new PageUtils(page);
    }

    
    
    /**
     * 根据分公司序号获取区域序号
     */
	@Override
	public Integer getAreaSeqByBranchOfficeSeq(Integer branchOfficeSeq) {
		AreaEntity areaEntity = areaDao.selectById(branchOfficeSeq);
		return areaEntity.getParentSeq();
	}



	/**
	 * 提交补单
	 */
	@Override
    @Transactional(propagation = Propagation.REQUIRED)
	public void submit(Integer year, Integer week, Date startDate, Date endDate, Integer areaSeq, Integer branchOfficeSeq,
			Integer userSeq, Integer periodSeq, String sxValue, JSONArray shoeAndNumList) {
		Date nowDate = new Date();
		
		PatchEntity patchEntity = new PatchEntity();
//		Seq			int	0	0	0	-1	0	0		0	0	0	0	序号(主键)		-1			
//		Year		int	0	0	-1	0	0	0		0	0	0	0	年份		0			
//		Week		int	0	0	-1	0	0	0		0	0	0	0	周		0			
//		StartDate	date	0	0	-1	0	0	0		0	0	0	0	开始日期		0			
//		EndDate		date	0	0	-1	0	0	0		0	0	0	0	结束日期		0			
//		AreaSeq		int	0	0	-1	0	0	0		0	0	0	0	大区seq		0			
//		BranchOfficeSeq	int	0	0	-1	0	0	0		0	0	0	0	分公司序号		0			
//		UserSeq		int	0	0	-1	0	0	0		0	0	0	0	用户Seq		0			
//		PeriodSeq	int	0	0	-1	0	0	0		0	0	0	0	季节		0			
//		SXValue		varchar	50	0	-1	0	0	0		0	0	0	0	品类	Chinese_PRC_CI_AS	0			
//		ShoeSeq		int	0	0	-1	0	0	0		0	0	0	0	鞋子seq		0			
//		ShoeID		varchar	50	0	-1	0	0	0		0	0	0	0	货号	Chinese_PRC_CI_AS	0			
//		PatchNum	int	0	0	-1	0	0	0		0	0	0	0	补单数量		0			
//		State		int	0	0	-1	0	0	0		0	0	0	0	状态：0待处理 1已确认 2已取消		0			
//		InputTime	datetime	0	0	-1	0	0	0	(getdate())	0	0	0	0	入库时间		0			
//		Del			int	0	0	0	0	0	0	((0))	0	0	0	0	删除标识( 0 : 未删除、  1 : 删除 )		0			
		patchEntity.setYear(year);
		patchEntity.setWeek(week);
		patchEntity.setStartDate(startDate);
		patchEntity.setEndDate(endDate);
		patchEntity.setAreaSeq(areaSeq);
		patchEntity.setBranchOfficeSeq(branchOfficeSeq);
		patchEntity.setUserSeq(userSeq);
		patchEntity.setPeriodSeq(periodSeq);
		patchEntity.setSxValue(sxValue);

		patchEntity.setState(0);
		patchEntity.setInputTime(nowDate);
		patchEntity.setDel(0);
		
		
		for(Object shoeAndNum : shoeAndNumList) {
			String[] s = ((String)shoeAndNum).split(":");
			patchEntity.setShoeSeq(Integer.parseInt(s[0]));
			patchEntity.setShoeID(s[1]);
			patchEntity.setPatchNum(Integer.parseInt(s[2]));
			patchDao.insert(patchEntity);
		}
		
		
	}



	@Override
	public List<Map<String, Object>> getAreas(Integer periodSeq, String sxValue, Integer week) {
		Wrapper<PatchEntity> wrapper=new EntityWrapper<PatchEntity>();
		wrapper.setSqlSelect("distinct BranchOfficeSeq");
		wrapper.where(" Week = {0} AND PeriodSeq={1} AND SXValue={2}",week,periodSeq,sxValue);
		return patchDao.selectMaps(wrapper);
	}



	@Override
	public List<Object> getWeeks(Integer areaSeq) {
		Wrapper<PatchEntity> wrapper=new EntityWrapper<PatchEntity>();
		wrapper.setSqlSelect("distinct Week");
		if(areaSeq!=null) {
		wrapper.where("BranchOfficeSeq = {0}", areaSeq);
		}
		List<Object> weeks=patchDao.selectObjs(wrapper);
		return weeks;
	}



	@Override
	public List<Object> getPeriods(Integer userSeq,Integer week) {
		Wrapper<PatchEntity> wrapper=new EntityWrapper<PatchEntity>();
		wrapper.setSqlSelect("distinct PeriodSeq");
		if(userSeq!=null) {
		wrapper.where("UserSeq = {0} AND Week = {1}", userSeq,week);
		}else {
			wrapper.where(" Week = {0}",week);
		}
		List<Object> weeks=patchDao.selectObjs(wrapper);
		return weeks;
	}



	@Override
	public List<PatchEntity> getPatchs(Integer periodSeq, String sxValue, Integer week, Integer shoeSeq,Integer branchOfficeSeq) {
		Wrapper<PatchEntity> wrapper=new EntityWrapper<PatchEntity>();
		wrapper.where(" Week = {0} AND PeriodSeq={1} AND SXValue={2} AND ShoeSeq={3} AND BranchOfficeSeq={4}",week,periodSeq,sxValue,shoeSeq,branchOfficeSeq);
		return patchDao.selectList(wrapper);
	}



	@Override
	public List<Object> getShoeSeqs(Integer periodSeq, String sxValue, Integer week,Integer userSeq) {
		Wrapper<PatchEntity> wrapper=new EntityWrapper<PatchEntity>();
		wrapper.setSqlSelect("distinct ShoeSeq");
		if(userSeq!=null) {
			wrapper.where(" Week = {0} AND PeriodSeq={1} AND SXValue={2} AND UserSeq={3}",week,periodSeq,sxValue,userSeq);
			}else {
				wrapper.where(" Week = {0} AND PeriodSeq={1} AND SXValue={2}",week,periodSeq,sxValue);
			}
		return patchDao.selectObjs(wrapper);
	}

}
